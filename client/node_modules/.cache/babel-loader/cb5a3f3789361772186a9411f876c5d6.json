{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/martenhakkestad/Uptime/testgui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/martenhakkestad/Uptime/testgui/src/components/Modal/index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation POST_MUTATION($text: String!){\\n    modifyPostScore(text: $text){\\n        id\\n        text\\n        score\\n        date\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup, Input } from 'reactstrap';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nconst POST_MUTATION = gql(_templateObject());\n\nclass myModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\"\n    };\n    this.toggleNewPost = this.toggleNewPost.bind(this);\n  }\n\n  toggleNewPost() {\n    this.props.onChange();\n    this.setState({\n      text: \"\"\n    });\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      isOpen: this.props.open,\n      toggle: this.toggleNewPost,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleNewPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Add a new post\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"textarea\",\n      name: \"text\",\n      id: \"exampleText\",\n      onChange: e => this.setState({\n        text: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.toggleNewPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Post\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggleNewPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\n\nexport default myModal;","map":{"version":3,"sources":["/Users/martenhakkestad/Uptime/testgui/src/components/Modal/index.js"],"names":["React","Modal","ModalHeader","ModalBody","ModalFooter","Button","Form","FormGroup","Input","gql","Mutation","POST_MUTATION","myModal","Component","constructor","props","state","text","toggleNewPost","bind","onChange","setState","render","open","className","e","target","value"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,WAAvC,EAAoDC,MAApD,EAA4DC,IAA5D,EAAkEC,SAAlE,EAA6EC,KAA7E,QAA0F,YAA1F;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,QAAuB,cAAvB;AAEA,MAAMC,aAAa,GAAGF,GAAH,mBAAnB;;AAYA,MAAMG,OAAN,SAAsBZ,KAAK,CAACa,SAA5B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDD,EAAAA,aAAa,GAAE;AACb,SAAKH,KAAL,CAAWK,QAAX;AACA,SAAKC,QAAL,CAAc;AACZJ,MAAAA,IAAI,EAAE;AADM,KAAd;AAGD;;AAEDK,EAAAA,MAAM,GAAE;AACN,WACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,IAA1B;AAAgC,MAAA,MAAM,EAAE,KAAKL,aAA7C;AAA4D,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWS,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKN,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAmC,MAAA,EAAE,EAAC,aAAtC;AAAqD,MAAA,QAAQ,EAAGO,CAAD,IAAO,KAAKJ,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAEQ,CAAC,CAACC,MAAF,CAASC;AAAhB,OAAd,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CAHJ,EAWI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKT,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EACmE,GADnE,EAEA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAE,KAAKA,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,CAXJ,CADJ;AAkBD;;AAnCkC;;AAqCrC,eAAeN,OAAf","sourcesContent":["import React from 'react';\nimport {Modal, ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup, Input } from 'reactstrap';\n\nimport gql from 'graphql-tag';\nimport {Mutation} from 'react-apollo';\n\nconst POST_MUTATION = gql`\n  mutation POST_MUTATION($text: String!){\n    modifyPostScore(text: $text){\n        id\n        text\n        score\n        date\n    }\n  }\n`;\n\n\nclass myModal extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      text: \"\"\n    }\n    this.toggleNewPost = this.toggleNewPost.bind(this);\n  }\n\n  toggleNewPost(){\n    this.props.onChange();\n    this.setState({\n      text: \"\"\n    })\n  }\n\n  render(){\n    return(\n        <Modal isOpen={this.props.open} toggle={this.toggleNewPost} className={this.props.className}>\n            <ModalHeader toggle={this.toggleNewPost}>Add a new post</ModalHeader>\n\n            <ModalBody>\n              <Form>\n                <FormGroup>\n                  <Input type=\"textarea\" name=\"text\" id=\"exampleText\"  onChange={(e) => this.setState({text: e.target.value})}></Input>\n                </FormGroup>\n              </Form>\n            </ModalBody>\n            \n            <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggleNewPost}>Post</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggleNewPost}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n    )\n  }\n}\nexport default myModal;\n"]},"metadata":{},"sourceType":"module"}